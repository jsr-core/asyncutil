{
  "name": "@core/asyncutil",
  "version": "0.0.0",
  "exports": {
    ".": "./mod.ts",
    "./async-value": "./async_value.ts",
    "./barrier": "./barrier.ts",
    "./ensure-promise": "./ensure_promise.ts",
    "./flush-promises": "./flush_promises.ts",
    "./lock": "./lock.ts",
    "./mutex": "./mutex.ts",
    "./notify": "./notify.ts",
    "./peek-promise-state": "./peek_promise_state.ts",
    "./promise-state": "./promise_state.ts",
    "./queue": "./queue.ts",
    "./rw-lock": "./rw_lock.ts",
    "./semaphore": "./semaphore.ts",
    "./stack": "./stack.ts",
    "./wait-group": "./wait_group.ts"
  },
  "exclude": [
    ".coverage/**"
  ],
  "publish": {
    "include": [
      "**/*.ts",
      "README.md",
      "LICENSE"
    ],
    "exclude": [
      "**/*_test.ts",
      "**/*_bench.ts",
      ".*"
    ]
  },
  "imports": {
    "@core/asyncutil": "./mod.ts",
    "@core/asyncutil/async-value": "./async_value.ts",
    "@core/asyncutil/barrier": "./barrier.ts",
    "@core/asyncutil/ensure-promise": "./ensure_promise.ts",
    "@core/asyncutil/flush-promises": "./flush_promises.ts",
    "@core/asyncutil/lock": "./lock.ts",
    "@core/asyncutil/mutex": "./mutex.ts",
    "@core/asyncutil/notify": "./notify.ts",
    "@core/asyncutil/peek-promise-state": "./peek_promise_state.ts",
    "@core/asyncutil/promise-state": "./promise_state.ts",
    "@core/asyncutil/queue": "./queue.ts",
    "@core/asyncutil/rw-lock": "./rw_lock.ts",
    "@core/asyncutil/semaphore": "./semaphore.ts",
    "@core/asyncutil/stack": "./stack.ts",
    "@core/asyncutil/wait-group": "./wait_group.ts",
    "@core/iterutil": "jsr:@core/iterutil@^0.6.0",
    "@core/unknownutil": "jsr:@core/unknownutil@^4.2.0",
    "@cross/test": "jsr:@cross/test@^0.0.9",
    "@std/assert": "jsr:@std/assert@^1.0.2",
    "@std/async": "jsr:@std/async@^1.0.2",
    "@std/jsonc": "jsr:@std/jsonc@^1.0.0",
    "@std/path": "jsr:@std/path@^1.0.2"
  },
  "tasks": {
    "check": "deno check ./**/*.ts",
    "test": "deno test -A --parallel --shuffle --doc",
    "test:coverage": "deno task test --coverage=.coverage",
    "coverage": "deno coverage .coverage",
    "update": "deno run --allow-env --allow-read --allow-write=. --allow-run=git,deno --allow-net=jsr.io,registry.npmjs.org jsr:@molt/cli ./*.ts",
    "update:commit": "deno task -q update --commit --prefix deps: --pre-commit=fmt,lint"
  }
}
