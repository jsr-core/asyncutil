name: Test

env:
  DENO_VERSION: 1.x

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ env.DENO_VERSION }}
      - name: Format
        run: |
          deno fmt --check
      - name: Lint
        run: deno lint
      - name: Type check
        run: deno task check

  test-deno:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ env.DENO_VERSION }}
      - name: Test
        run: |
          deno task test:coverage
        timeout-minutes: 5
      - run: |
          deno task coverage --lcov > coverage.lcov
      - uses: codecov/codecov-action@v4
        with:
          os: ${{ runner.os }}
          files: ./coverage.lcov
          token: ${{ secrets.CODECOV_TOKEN }}

  test-node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - name: Install deps
        run: |
          npx jsr install
      - name: Test
        run: |
          npx --yes tsx --test *_test.ts
        timeout-minutes: 5

  jsr-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ env.DENO_VERSION }}
      - name: Publish (dry-run)
        run: |
          deno publish --dry-run
